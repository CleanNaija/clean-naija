
services:
  backend:
    build:
      context: ./backend  # Path to your backend code
    container_name: backend
    volumes:
      - ./backend:/waste_management_app  # Mount the backend code into the container
      - ./pip_cache:/home/chasfat/.cache/pip  # Mount custom pip cache directory for optimized installs
    ports:
      - "8001:8001"  # Expose port 8000 for the backend
    environment:
      - POSTGRES_USER=admin  # Database user
      - POSTGRES_PASSWORD=admin  # Database password
      - POSTGRES_DB=waste_management  # Database name
      - DJANGO_SETTINGS_MODULE=backend.settings  # Make sure to set this according to your project structure
      - PIP_CACHE_DIR=/home/chasfat/.cache/pip  # Specify the cache location explicitly for pipenv
    depends_on:
      - db  # Ensure the backend waits for the database to be available
    networks:
      - app_network
    command: pipenv run python manage.py runserver 0.0.0.0:8001 
    

  db:
    image: postgis/postgis:13-3.1
    container_name: db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: waste_management
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  pg_data:
